import getWeather from "./get-weather.js";
import weatherDescription from "./description.js";
function rounder(num) {
    return Math.round(num * 100) / 100;
}
export default async function textReport(station = "KNYC") {
    const weather = (await getWeather(station));
    if (!weather) {
        return "No weather data available.";
    }
    const weatherCodeArray = weather.properties.icon.split("/");
    const weatherCode = weatherCodeArray[weatherCodeArray.length - 1].split("?")[0];
    const description = weatherDescription(weatherCode);
    if (/night/.test(weather.properties.icon)) {
        description.emoji = "ðŸŒƒ";
    }
    let relativeHumidity = "";
    if (weather.properties.relativeHumidity.value) {
        relativeHumidity = `\nRelative Humidity: ${rounder(weather.properties.relativeHumidity.value)}%`;
    }
    let windChill = "";
    if (weather.properties.windChill.value) {
        windChill = `\nWind Chill: ${rounder(weather.properties.windChill.value)}Â°`;
    }
    let heatIndex = "";
    if (weather.properties.heatIndex.value) {
        heatIndex = `\nHeat Index: ${rounder(weather.properties.heatIndex.value)}Â°`;
    }
    return (`Current conditions (via NOAA):
${description.emoji} ${description.description}
Temperature: ${rounder(weather.properties.temperature.value)}Â°
Visibility: ${weather.properties.visibility.value / 1000}km` +
        relativeHumidity +
        windChill +
        heatIndex);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC1yZXBvcnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvd2VhdGhlci90ZXh0LXJlcG9ydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLFVBQVUsTUFBTSxrQkFBa0IsQ0FBQztBQUMxQyxPQUFPLGtCQUFrQixNQUFNLGtCQUFrQixDQUFDO0FBd0JsRCxTQUFTLE9BQU8sQ0FBQyxHQUFXO0lBQzFCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDO0FBQ3JDLENBQUM7QUFFRCxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssVUFBVSxVQUFVLENBQ3RDLFVBQWtCLE1BQU07SUFFeEIsTUFBTSxPQUFPLEdBQUcsQ0FBQyxNQUFNLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBa0IsQ0FBQztJQUM3RCxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDYixPQUFPLDRCQUE0QixDQUFDO0lBQ3RDLENBQUM7SUFFRCxNQUFNLGdCQUFnQixHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM1RCxNQUFNLFdBQVcsR0FDZixnQkFBZ0IsQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRTlELE1BQU0sV0FBVyxHQUFHLGtCQUFrQixDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBRXBELElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUM7UUFDMUMsV0FBVyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7SUFDM0IsQ0FBQztJQUVELElBQUksZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO0lBQzFCLElBQUksT0FBTyxDQUFDLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUM5QyxnQkFBZ0IsR0FBRyx3QkFBd0IsT0FBTyxDQUNoRCxPQUFPLENBQUMsVUFBVSxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FDMUMsR0FBRyxDQUFDO0lBQ1AsQ0FBQztJQUVELElBQUksU0FBUyxHQUFHLEVBQUUsQ0FBQztJQUNuQixJQUFJLE9BQU8sQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3ZDLFNBQVMsR0FBRyxpQkFBaUIsT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDOUUsQ0FBQztJQUNELElBQUksU0FBUyxHQUFHLEVBQUUsQ0FBQztJQUNuQixJQUFJLE9BQU8sQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3ZDLFNBQVMsR0FBRyxpQkFBaUIsT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDOUUsQ0FBQztJQUVELE9BQU8sQ0FDTDtFQUNGLFdBQVcsQ0FBQyxLQUFLLElBQUksV0FBVyxDQUFDLFdBQVc7ZUFDL0IsT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQztjQUM5QyxPQUFPLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEdBQUcsSUFBSSxJQUFJO1FBQ3hELGdCQUFnQjtRQUNoQixTQUFTO1FBQ1QsU0FBUyxDQUNWLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGdldFdlYXRoZXIgZnJvbSBcIi4vZ2V0LXdlYXRoZXIuanNcIjtcbmltcG9ydCB3ZWF0aGVyRGVzY3JpcHRpb24gZnJvbSBcIi4vZGVzY3JpcHRpb24uanNcIjtcblxuaW50ZXJmYWNlIFdlYXRoZXJSZXBvcnQge1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdGV4dERlc2NyaXB0aW9uOiBzdHJpbmc7XG4gICAgaWNvbjogc3RyaW5nO1xuICAgIHRlbXBlcmF0dXJlOiB7XG4gICAgICB2YWx1ZTogbnVtYmVyO1xuICAgIH07XG4gICAgdmlzaWJpbGl0eToge1xuICAgICAgdmFsdWU6IG51bWJlcjtcbiAgICB9O1xuICAgIHJlbGF0aXZlSHVtaWRpdHk6IHtcbiAgICAgIHZhbHVlOiBudW1iZXI7XG4gICAgfTtcbiAgICB3aW5kQ2hpbGw6IHtcbiAgICAgIHZhbHVlOiBudW1iZXI7XG4gICAgfTtcbiAgICBoZWF0SW5kZXg6IHtcbiAgICAgIHZhbHVlOiBudW1iZXI7XG4gICAgfTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gcm91bmRlcihudW06IG51bWJlcik6IG51bWJlciB7XG4gIHJldHVybiBNYXRoLnJvdW5kKG51bSAqIDEwMCkgLyAxMDA7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIHRleHRSZXBvcnQoXG4gIHN0YXRpb246IHN0cmluZyA9IFwiS05ZQ1wiLFxuKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgY29uc3Qgd2VhdGhlciA9IChhd2FpdCBnZXRXZWF0aGVyKHN0YXRpb24pKSBhcyBXZWF0aGVyUmVwb3J0O1xuICBpZiAoIXdlYXRoZXIpIHtcbiAgICByZXR1cm4gXCJObyB3ZWF0aGVyIGRhdGEgYXZhaWxhYmxlLlwiO1xuICB9XG5cbiAgY29uc3Qgd2VhdGhlckNvZGVBcnJheSA9IHdlYXRoZXIucHJvcGVydGllcy5pY29uLnNwbGl0KFwiL1wiKTtcbiAgY29uc3Qgd2VhdGhlckNvZGUgPVxuICAgIHdlYXRoZXJDb2RlQXJyYXlbd2VhdGhlckNvZGVBcnJheS5sZW5ndGggLSAxXS5zcGxpdChcIj9cIilbMF07XG5cbiAgY29uc3QgZGVzY3JpcHRpb24gPSB3ZWF0aGVyRGVzY3JpcHRpb24od2VhdGhlckNvZGUpO1xuXG4gIGlmICgvbmlnaHQvLnRlc3Qod2VhdGhlci5wcm9wZXJ0aWVzLmljb24pKSB7XG4gICAgZGVzY3JpcHRpb24uZW1vamkgPSBcIvCfjINcIjtcbiAgfVxuXG4gIGxldCByZWxhdGl2ZUh1bWlkaXR5ID0gXCJcIjtcbiAgaWYgKHdlYXRoZXIucHJvcGVydGllcy5yZWxhdGl2ZUh1bWlkaXR5LnZhbHVlKSB7XG4gICAgcmVsYXRpdmVIdW1pZGl0eSA9IGBcXG5SZWxhdGl2ZSBIdW1pZGl0eTogJHtyb3VuZGVyKFxuICAgICAgd2VhdGhlci5wcm9wZXJ0aWVzLnJlbGF0aXZlSHVtaWRpdHkudmFsdWUsXG4gICAgKX0lYDtcbiAgfVxuXG4gIGxldCB3aW5kQ2hpbGwgPSBcIlwiO1xuICBpZiAod2VhdGhlci5wcm9wZXJ0aWVzLndpbmRDaGlsbC52YWx1ZSkge1xuICAgIHdpbmRDaGlsbCA9IGBcXG5XaW5kIENoaWxsOiAke3JvdW5kZXIod2VhdGhlci5wcm9wZXJ0aWVzLndpbmRDaGlsbC52YWx1ZSl9wrBgO1xuICB9XG4gIGxldCBoZWF0SW5kZXggPSBcIlwiO1xuICBpZiAod2VhdGhlci5wcm9wZXJ0aWVzLmhlYXRJbmRleC52YWx1ZSkge1xuICAgIGhlYXRJbmRleCA9IGBcXG5IZWF0IEluZGV4OiAke3JvdW5kZXIod2VhdGhlci5wcm9wZXJ0aWVzLmhlYXRJbmRleC52YWx1ZSl9wrBgO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICBgQ3VycmVudCBjb25kaXRpb25zICh2aWEgTk9BQSk6XG4ke2Rlc2NyaXB0aW9uLmVtb2ppfSAke2Rlc2NyaXB0aW9uLmRlc2NyaXB0aW9ufVxuVGVtcGVyYXR1cmU6ICR7cm91bmRlcih3ZWF0aGVyLnByb3BlcnRpZXMudGVtcGVyYXR1cmUudmFsdWUpfcKwXG5WaXNpYmlsaXR5OiAke3dlYXRoZXIucHJvcGVydGllcy52aXNpYmlsaXR5LnZhbHVlIC8gMTAwMH1rbWAgK1xuICAgIHJlbGF0aXZlSHVtaWRpdHkgK1xuICAgIHdpbmRDaGlsbCArXG4gICAgaGVhdEluZGV4XG4gICk7XG59XG4iXX0=